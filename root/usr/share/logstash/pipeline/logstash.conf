input {
	file {
		id => "jka-games"
		tags => [ "jka-games" ]
		path => "/opt/jka/*/*/games.log"
	}
	file {
		id => "jka-playerstats"
		tags => [ "jka-playerstats" ]
		path => "/opt/jka/*/*/playerstats.log"
	}
	file {
		id => "jka-serverstats"
		tags => [ "jka-serverstats" ]
		path => "/opt/jka/*/*/serverstats.log"
	}
}

filter {
	# JKA Server Log
	if "jka-games" in [tags] {
		grok {
			match => [ "message", "\[%{TIMESTAMP_ISO8601:timestamp} \| %{DATA} \| %{NUMBER:uptime}\] %{GREEDYDATA:logmsg}" ]
		}
		grok {
			match => [ "logmsg", "Admin Command %{WORD:commandname} used by (?:client %{NUMBER:clientnum} \(%{DATA:playername}\)|server \(or Rcon\)), %{GREEDYDATA:commandargs}" ]
			add_field => [ "commandtype", "admin" ]
		}
		grok {
			match => [
				"logmsg", "(?<commandname>say(?:_\w+)?): %{DATA:playername}\^7: \^\d%{GREEDYDATA:commandargs}",
				"logmsg", "(?<commandname>say_emote): %{DATA:playername}\^7 %{GREEDYDATA:commandargs}",
				"logmsg", "(?<commandname>tell): %{DATA:playername}\^7 to %{DATA:targetname}\^7: \^6%{GREEDYDATA:commandargs}",
				"logmsg", "(?<commandname>comm): %{DATA:playername}\^7 to %{DATA:targetname}\^7: %{GREEDYDATA:commandargs}"
			]
			add_field => [ "commandtype", "normal" ]
		}
		grok {
			match => [
				"logmsg", "(?<eventname>Client(?:Begin|Disconnect)): %{NUMBER:clientnum} \(%{DATA:playername}\)",
				"logmsg", "(?<eventname>ClientConnect): %{NUMBER:clientnum} \(IP: %{IP:clientip}, name: %{DATA:playername}\)",
				"logmsg", "(?<eventname>ClientUserinfoChanged): %{DATA:playername}\^7 renamed to %{GREEDYDATA:playername}"
			]
			add_field => [ "eventtype", "client" ]
		}
		grok {
			match => [
				"logmsg", "(?<eventname>Account login) \(adminRank %{NUMBER:adminrank}: %{DATA}, username: %{DATA:username}\^7\): client %{NUMBER:clientnum} \(%{DATA:playername}\)",
				"logmsg", "(?<eventname>Account logout): client %{NUMBER:clientnum} \(%{DATA:playername}\)",
				"logmsg", "(?<eventname>Account %{DATA}): %{GREEDYDATA:eventargs}"
			]
			add_field => [ "eventtype", "account" ]
		}

	# JKA Player Stats
	} else if "jka-playerstats" in [tags] {
		grok {
			match => [ "message", "%{TIMESTAMP_ISO8601:timestamp};\"%{DATA:playername}\";%{NUMBER:playerping};%{NUMBER:playerscore}" ]
		}

	# JKA Server Stats
	} else if "jka-serverstats" in [tags] {
		grok {
			match => [ "message", "%{TIMESTAMP_ISO8601:timestamp};%{DATA:mapname};%{NUMBER:playercount};%{NUMBER:playermax}" ]
		}
	}

	# JKA All Logs
	grok {
		match => [ "path", "/(?<servername>[^/]+)/(?<modname>[^/]+)/[^/]+\.log" ]
		remove_field => [ "path" ]
	}
	date {
		match => [ "timestamp", "yyyy-MM-dd HH:mm:ss" ]
		timezone => "UTC"
		remove_field => [ "timestamp" ]
	}
	mutate {
		gsub => [
			"playername", "\^[0-9a-zA-Z]", "",
			"targetname", "\^[0-9a-zA-Z]", ""
		]
		convert => [
			"playerping", "integer",
			"playerscore", "integer",
			"playercount", "integer",
			"playermax", "integer"
		]
	}
	geoip {
		source => "clientip"
		target => "geoip"
	}
}

output {
	# Elasticsearch
	elasticsearch {
		hosts => "${ELASTICSEARCH_HOSTS:http://elasticsearch:9200}"
		user => "${ELASTICSEARCH_USERNAME}"
		password => "${ELASTICSEARCH_PASSWORD}"
	}

	# ActiveMQ
	if "jka-games" in [tags] {
		stomp {
			host => "activemq"
			port => 61613
			destination => "/topic/jka.%{modname}.%{servername}.games.log"
			headers => [ "amq-msg-type", "text", "type", "%{type}" ]
		}
	}
}
